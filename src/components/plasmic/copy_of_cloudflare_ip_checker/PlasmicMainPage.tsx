/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pVt2oR5EtQUEdy73p3KcxV
// Component: IrI87iixQUu
import * as React from "react";
import {
  hasVariant,
  createPlasmicElement,
  RenderOpts,
  Override,
  classNames,
  Flex,
  wrapWithClassName,
  Renderer,
  NodeRenderer,
  createPlasmicElementProxy,
  makeFragment,
  PlasmicIcon,
  PlasmicSlot,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg
} from "@plasmicapp/react-web";
import Spacer from "../../Spacer"; // plasmic-import: BrV3uEHn-Yj/component
import Input from "../../Input"; // plasmic-import: RGeap8xl0N4/component
import ValidationResultIcon from "../../ValidationResultIcon"; // plasmic-import: IB70_6M4C4N/component
import StreamlineIconsLink from "../../StreamlineIconsLink"; // plasmic-import: OyXAn4ZHyP8/component

import { ScreenContext, ScreenValue } from "../PlasmicGlobalVariant__Screen"; // plasmic-import: kHSf6cC0Tt8/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_copy_of_cloudflare_ip_checker.css"; // plasmic-import: pVt2oR5EtQUEdy73p3KcxV/projectcss
import "./PlasmicMainPage.css"; // plasmic-import: IrI87iixQUu/css
import FlourishTopLeftsvgIcon from "./PlasmicIcon__FlourishTopLeftsvg"; // plasmic-import: VgMuHBXyhcE/icon
import FlourishRightsvgIcon from "./PlasmicIcon__FlourishRightsvg"; // plasmic-import: CtgddAEKG1A/icon

export type PlasmicMainPage__VariantsArgs = {};

export type PlasmicMainPage__ArgsType = {};

const PlasmicMainPage__RenderFuncs = {
  root: (
    opts: RenderOpts<
      PlasmicMainPage__VariantsArgs,
      PlasmicMainPage__ArgsType,
      {
        root?: Flex<"div">;
        row?: Flex<"div">;
        input?: Flex<typeof Input>;
        validationResultIcon?: Flex<typeof ValidationResultIcon>;
        streamlineIconsLink?: Flex<typeof StreamlineIconsLink>;
      }
    >
  ): React.ReactElement => {
    return <PlasmicMainPage__FCs.root opts={opts} />;
  },
  row: (
    opts: RenderOpts<
      PlasmicMainPage__VariantsArgs,
      PlasmicMainPage__ArgsType,
      {
        row?: Flex<"div">;
        input?: Flex<typeof Input>;
        validationResultIcon?: Flex<typeof ValidationResultIcon>;
      }
    >
  ): React.ReactElement => {
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};
    return (
      <div
        data-plasmic-override={overrides.row}
        className={classNames({
          "MainPage__row--baseLg__nqjjv7Nf9o_FGEW3": true,
          "MainPage__row--baseMd__nqjjv7Nf9o_plmfB": true,
          MainPage__row__nqjjv: true,
          "plasmic-default__all": true,
          "plasmic-default__div": true
        })}
      >
        {PlasmicMainPage__RenderFuncs.input({
          variants,
          args,
          overrides
        })}

        <Spacer
          className={classNames({
            "MainPage__spacer--baseLg__QQO3b7Nf9o_FGEW3": true,
            "MainPage__spacer--baseMd__QQO3b7Nf9o_plmfB": true,
            MainPage__spacer__QQO3b: true,
            __wab_instance: true
          })}
          {...({} as any)}
        ></Spacer>

        {PlasmicMainPage__RenderFuncs.validationResultIcon({
          variants,
          args,
          overrides
        })}
      </div>
    );
  },
  input: (
    opts: RenderOpts<
      PlasmicMainPage__VariantsArgs,
      PlasmicMainPage__ArgsType,
      {
        input?: Flex<typeof Input>;
      }
    >
  ): React.ReactElement => {
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};
    return (
      <Input
        data-plasmic-override={overrides.input}
        className={classNames({
          "MainPage__input--baseMd__z9xV47Nf9o_plmfB": true,
          MainPage__input__z9xV4: true,
          __wab_instance: true
        })}
        placeholder={"e.g. 101.103.104.105" as const}
        {...({} as any)}
      ></Input>
    );
  },
  validationResultIcon: (
    opts: RenderOpts<
      PlasmicMainPage__VariantsArgs,
      PlasmicMainPage__ArgsType,
      {
        validationResultIcon?: Flex<typeof ValidationResultIcon>;
      }
    >
  ): React.ReactElement => {
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};
    return (
      <ValidationResultIcon
        data-plasmic-override={overrides.validationResultIcon}
        className={classNames({
          "MainPage__validationResultIcon--baseMd__1_Pa_7Nf9o_plmfB": true,
          MainPage__validationResultIcon__1_Pa_: true,
          __wab_instance: true
        })}
        {...({} as any)}
      ></ValidationResultIcon>
    );
  },
  streamlineIconsLink: (
    opts: RenderOpts<
      PlasmicMainPage__VariantsArgs,
      PlasmicMainPage__ArgsType,
      {
        streamlineIconsLink?: Flex<typeof StreamlineIconsLink>;
      }
    >
  ): React.ReactElement => {
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};
    return (
      <StreamlineIconsLink
        data-plasmic-override={overrides.streamlineIconsLink}
        className={classNames({
          "MainPage__streamlineIconsLink--baseLg__-M_Dm7Nf9o_FGEW3": true,
          "MainPage__streamlineIconsLink--baseMd__-M_Dm7Nf9o_plmfB": true,
          "MainPage__streamlineIconsLink__-M_Dm": true,
          __wab_instance: true
        })}
        {...({} as any)}
      ></StreamlineIconsLink>
    );
  }
};

const PlasmicMainPage__FCs = {
  root: ((props: {
    opts: Parameters<typeof PlasmicMainPage__RenderFuncs["root"]>[0];
  }) => {
    const { opts } = props;
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};

    const globalVariants = {
      screen: React.useContext(ScreenContext)
    };

    return (
      <div
        data-plasmic-override={overrides.root}
        className={classNames({
          "MainPage__root--baseLg__Df2nb7Nf9o_FGEW3": true,
          "MainPage__root--baseMd__Df2nb7Nf9o_plmfB": true,
          MainPage__root__Df2nb: true,
          "plasmic-default__all": true,
          "plasmic-default__div": true
        })}
      >
        {(true && hasVariant(globalVariants, "screen", "lg")
          ? false
          : false) && (
          <FlourishTopLeftsvgIcon
            className={classNames({
              "MainPage__svg--baseLg__aRQsq7Nf9o_FGEW3": true,
              MainPage__svg__aRQsq: true,
              "plasmic-default__all": true,
              "plasmic-default__svg": true
            })}
            role={"img"}
            {...({} as any)}
          ></FlourishTopLeftsvgIcon>
        )}

        <FlourishTopLeftsvgIcon
          className={classNames({
            "MainPage__svg--baseLg__fdT067Nf9o_FGEW3": true,
            MainPage__svg__fdT06: true,
            "plasmic-default__all": true,
            "plasmic-default__svg": true
          })}
          role={"img"}
          {...({} as any)}
        ></FlourishTopLeftsvgIcon>

        <FlourishRightsvgIcon
          className={classNames({
            "MainPage__svg--baseLg__Ij8SX7Nf9o_FGEW3": true,
            MainPage__svg__Ij8SX: true,
            "plasmic-default__all": true,
            "plasmic-default__svg": true
          })}
          role={"img"}
          {...({} as any)}
        ></FlourishRightsvgIcon>

        <div
          className={classNames({
            "MainPage__box--baseLg__aiMyg7Nf9o_FGEW3": true,
            MainPage__box__aiMyg: true,
            "plasmic-default__all": true,
            "plasmic-default__div": true
          })}
        >
          <div
            className={classNames({
              "MainPage__box--baseLg__FBHxV7Nf9o_FGEW3": true,
              "MainPage__box--baseMd__FBHxV7Nf9o_plmfB": true,
              MainPage__box__FBHxV: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"Cloudflare IP Address Checker"}
          </div>

          <Spacer
            className={classNames({
              "MainPage__spacer--baseLg__9KbD77Nf9o_FGEW3": true,
              MainPage__spacer__9KbD7: true,
              __wab_instance: true
            })}
            {...({} as any)}
          ></Spacer>

          {PlasmicMainPage__RenderFuncs.row({
            variants,
            args,
            overrides
          })}

          <Spacer
            className={classNames({
              "MainPage__spacer--baseLg__GveMA7Nf9o_FGEW3": true,
              MainPage__spacer__GveMA: true,
              __wab_instance: true
            })}
            {...({} as any)}
          ></Spacer>

          <div
            className={classNames({
              "MainPage__box--baseLg__YAiA87Nf9o_FGEW3": true,
              MainPage__box__YAiA8: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"You can try Cloudflare IPv4 and IPv6 addresses like:"}
          </div>

          <div
            className={classNames({
              "MainPage__box--baseLg__pPfvM7Nf9o_FGEW3": true,
              "MainPage__box--baseMd__pPfvM7Nf9o_plmfB": true,
              MainPage__box__pPfvM: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"103.21.244.0"}
          </div>

          <div
            className={classNames({
              "MainPage__box--baseLg__PWQVw7Nf9o_FGEW3": true,
              MainPage__box__PWQVw: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"2400:cb00:0000::0000"}
          </div>

          <Spacer
            className={classNames({
              "MainPage__spacer__wSs-X": true,
              __wab_instance: true
            })}
            {...({} as any)}
          ></Spacer>

          <div
            className={classNames({
              "MainPage__box--baseLg__gi-aY7Nf9o_FGEW3": true,
              "MainPage__box__gi-aY": true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"You can also try ranges like:\n"}
          </div>

          <div
            className={classNames({
              "MainPage__box--baseLg__ot1HX7Nf9o_FGEW3": true,
              MainPage__box__ot1HX: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"108.162.192.0/18\n"}
          </div>

          <div
            className={classNames({
              "MainPage__box--baseLg__D8MOb7Nf9o_FGEW3": true,
              MainPage__box__D8MOb: true,
              "plasmic-default__all": true,
              "plasmic-default__div": true
            })}
          >
            {"2405:8100::/32"}
          </div>
        </div>

        {PlasmicMainPage__RenderFuncs.streamlineIconsLink({
          variants,
          args,
          overrides
        })}
      </div>
    ) as React.ReactElement;
  }) as React.FunctionComponent<{
    opts: Parameters<typeof PlasmicMainPage__RenderFuncs["root"]>[0];
  }>,

  row: undefined,
  input: undefined,
  validationResultIcon: undefined,
  streamlineIconsLink: undefined
};

class PlasmicMainPage__Renderer extends Renderer<
  PlasmicMainPage__VariantsArgs,
  PlasmicMainPage__ArgsType,
  typeof PlasmicMainPage__RenderFuncs,
  "root"
> {
  constructor(
    variants: PlasmicMainPage__VariantsArgs,
    args: PlasmicMainPage__ArgsType
  ) {
    super(variants, args, PlasmicMainPage__RenderFuncs, "root");
  }

  protected create(
    variants: PlasmicMainPage__VariantsArgs,
    args: PlasmicMainPage__ArgsType
  ) {
    return new PlasmicMainPage__Renderer(variants, args);
  }

  withVariants(
    variants: PlasmicMainPage__VariantsArgs
  ): PlasmicMainPage__Renderer {
    return super.withVariants(variants) as PlasmicMainPage__Renderer;
  }

  withArgs(args: PlasmicMainPage__ArgsType): PlasmicMainPage__Renderer {
    return super.withArgs(args) as PlasmicMainPage__Renderer;
  }

  getInternalVariantProps() {
    return [];
  }

  getInternalArgProps() {
    return [];
  }

  forNode(
    name: "root"
  ): NodeRenderer<typeof PlasmicMainPage__RenderFuncs["root"]>;
  forNode(
    name: "row"
  ): NodeRenderer<typeof PlasmicMainPage__RenderFuncs["row"]>;
  forNode(
    name: "input"
  ): NodeRenderer<typeof PlasmicMainPage__RenderFuncs["input"]>;
  forNode(
    name: "validationResultIcon"
  ): NodeRenderer<typeof PlasmicMainPage__RenderFuncs["validationResultIcon"]>;
  forNode(
    name: "streamlineIconsLink"
  ): NodeRenderer<typeof PlasmicMainPage__RenderFuncs["streamlineIconsLink"]>;
  forNode(name: keyof typeof PlasmicMainPage__RenderFuncs) {
    return super.forNode(name);
  }
}

interface PlasmicMainPageRootProps {
  variants?: PlasmicMainPage__VariantsArgs;
  args?: Partial<PlasmicMainPage__ArgsType>;
  root?: Flex<"div">;
  row?: Flex<"div">;
  input?: Flex<typeof Input>;
  validationResultIcon?: Flex<typeof ValidationResultIcon>;
  streamlineIconsLink?: Flex<typeof StreamlineIconsLink>;
}

export const PlasmicMainPage = ((props: PlasmicMainPageRootProps) => {
  return new PlasmicMainPage__Renderer(props.variants || {}, props.args || {})
    .forNode("root")
    .withOverrides({
      root: props.root,
      row: props.row,
      input: props.input,
      validationResultIcon: props.validationResultIcon,
      streamlineIconsLink: props.streamlineIconsLink
    })
    .render();
}) as React.FunctionComponent<PlasmicMainPageRootProps> & {
  row: React.FunctionComponent<PlasmicMainPageRowProps>;
  input: React.FunctionComponent<PlasmicMainPageInputProps>;
  validationResultIcon: React.FunctionComponent<
    PlasmicMainPageValidationResultIconProps
  >;

  streamlineIconsLink: React.FunctionComponent<
    PlasmicMainPageStreamlineIconsLinkProps
  >;

  createRenderer: () => PlasmicMainPage__Renderer;
};

interface PlasmicMainPageRowProps {
  variants?: PlasmicMainPage__VariantsArgs;
  args?: Partial<PlasmicMainPage__ArgsType>;
  row?: Flex<"div">;
  input?: Flex<typeof Input>;
  validationResultIcon?: Flex<typeof ValidationResultIcon>;
}

PlasmicMainPage.row = ((props: PlasmicMainPageRowProps) => {
  return new PlasmicMainPage__Renderer(props.variants || {}, props.args || {})
    .forNode("row")
    .withOverrides({
      row: props.row,
      input: props.input,
      validationResultIcon: props.validationResultIcon
    })
    .render();
}) as React.FunctionComponent<PlasmicMainPageRowProps>;

interface PlasmicMainPageInputProps {
  variants?: PlasmicMainPage__VariantsArgs;
  args?: Partial<PlasmicMainPage__ArgsType>;
  input?: Flex<typeof Input>;
}

PlasmicMainPage.input = ((props: PlasmicMainPageInputProps) => {
  return new PlasmicMainPage__Renderer(props.variants || {}, props.args || {})
    .forNode("input")
    .withOverrides({
      input: props.input
    })
    .render();
}) as React.FunctionComponent<PlasmicMainPageInputProps>;

interface PlasmicMainPageValidationResultIconProps {
  variants?: PlasmicMainPage__VariantsArgs;
  args?: Partial<PlasmicMainPage__ArgsType>;
  validationResultIcon?: Flex<typeof ValidationResultIcon>;
}

PlasmicMainPage.validationResultIcon = ((
  props: PlasmicMainPageValidationResultIconProps
) => {
  return new PlasmicMainPage__Renderer(props.variants || {}, props.args || {})
    .forNode("validationResultIcon")
    .withOverrides({
      validationResultIcon: props.validationResultIcon
    })
    .render();
}) as React.FunctionComponent<PlasmicMainPageValidationResultIconProps>;

interface PlasmicMainPageStreamlineIconsLinkProps {
  variants?: PlasmicMainPage__VariantsArgs;
  args?: Partial<PlasmicMainPage__ArgsType>;
  streamlineIconsLink?: Flex<typeof StreamlineIconsLink>;
}

PlasmicMainPage.streamlineIconsLink = ((
  props: PlasmicMainPageStreamlineIconsLinkProps
) => {
  return new PlasmicMainPage__Renderer(props.variants || {}, props.args || {})
    .forNode("streamlineIconsLink")
    .withOverrides({
      streamlineIconsLink: props.streamlineIconsLink
    })
    .render();
}) as React.FunctionComponent<PlasmicMainPageStreamlineIconsLinkProps>;

PlasmicMainPage.createRenderer = () => new PlasmicMainPage__Renderer({}, {});

export default PlasmicMainPage;
/* prettier-ignore-end */
